---
- name: Sudo-level VM Prep
  hosts: all
  become: true
  become_user: root
  vars:
    docker_repo: 'deb https://apt.dockerproject.org/repo {{ ansible_distribution|lower }}-{{ ansible_distribution_release|lower }} main'
    gosha256: 'e40c36ae71756198478624ed1bb4ce17597b3c19d243f3f0899bb5740d56212a'
    gotarball: 'go{{ gover }}.linux-amd64.tar.gz'
    gourl: 'https://storage.googleapis.com/golang'
    gover: '1.6.2'  #Change this variable to update to a new version of Go
    todd_dir: '/home/vagrant/go/src/github.com/toddproject/todd'
    todd_make_configureenv_check_file: '/home/vagrant/.make_configureenv_complete'
  tasks:

    - name: Set up docker repo
      apt_repository:
        repo: '{{ docker_repo }}'
        state: "present"

    - name: Install APT dependencies
      apt:
        name: "{{ item }}"
        state: "latest"
        update_cache: yes
        force: yes  # Currently forcing because of a certificate error for docker-engine
      with_items:
        - 'git'
        - 'docker-engine'

    - name: Add vagrant user to docker group
      user:
        name: "vagrant"
        groups: "docker"
        append: yes
      register: vagrant_user_added_to_docker_group

    - name: Ensure docker service is restarted
      service:
        name: "docker"
        state: "restarted"
      when: vagrant_user_added_to_docker_group.changed

    - name: Download Go tarball
      get_url:
        url: "{{ gourl }}/{{ gotarball }}"
        checksum: "sha256:{{ gosha256 }}"
        validate_certs: no
        dest: "/tmp/{{ gotarball }}"
        mode: 0770

    - name: Unzip Go tarball
      unarchive:
        src: "/tmp/{{ gotarball }}"
        dest: "/usr/local"
        copy: no
      args:
        creates: "/usr/local/go/bin/go"

    - name: Config Files
      file:
        src: "{{ todd_dir }}/etc"
        dest: "/etc/todd"
        state: "link"

    - name: Checking status of Configure Environment
      stat:
        path: "{{ todd_make_configureenv_check_file }}"
      register: "make_configureenv_check"

    - name: Configure Environment
      command: "make configureenv" #what is changed in order to determine if this needs to run again
      args:
        chdir: "{{ todd_dir }}"
      register: "make_configureenv"
      when: not make_configureenv_check.stat.exists

    - name: Marking Configure Environment As Complete
      file:
        path: "{{ todd_make_configureenv_check_file }}"
        state: "touch"
      when: make_configureenv.changed

    - name: GOPATH Owner  #Needs to be changed to ensure idempotency
#      file:
#        path: "/home/vagrant/go"
#        owner: "vagrant"
#        group: "vagrant"
#        recurse: yes
#        state: "directory"
      shell: chown vagrant:vagrant $(find /home/vagrant/go | grep -v todd) warn=no

- name: Prepping for ToDD
  hosts: all
  vars:
    todd_compile_check_file: '/home/vagrant/.todd_compile_complete'
    todd_dir: '/home/vagrant/go/src/github.com/toddproject/todd'
  tasks:

    - name: Set GOPATH for Vagrant user profile
      lineinfile:
        dest: "/home/vagrant/.profile"
        state: "present"
        regexp: "^export GOPATH"
        line: "export GOPATH=/home/vagrant/go"

    - name: Set PATH for Vagrant user profile
      lineinfile:
        dest: "/home/vagrant/.profile"
        state: "present"
        regexp: "^export PATH"
        line: "export PATH=$PATH:/home/vagrant/go/bin:/usr/local/go/bin:{{ todd_dir }}/scripts"

    - name: cd to todd_dir when logging in
      lineinfile:
        dest: "/home/vagrant/.profile"
        state: "present"
        regexp: "^cd "
        line: "cd {{ todd_dir }}"

    - name: Checking Status of Compile ToDD
      stat:
        path: "{{ todd_compile_check_file }}"
      register: "todd_compile_complete"

    - name: Compile ToDD
      shell: ". /home/vagrant/.profile && make"
      args:
        chdir: "{{ todd_dir }}"
      register: "todd_compiled"
      when: not todd_compile_complete.stat.exists

    - name: Marking Status of Compile ToDD as Complete
      file:
        path: "{{ todd_compile_check_file }}"
        state: touch
      when: todd_compiled.changed

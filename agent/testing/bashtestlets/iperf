#!/usr/bin/env bash

# Copyright 2016 Matt Oswalt. Use or modification of this
# source code is governed by the license provided here:
# https://github.com/Mierdin/todd/blob/master/LICENSE

check() {
    echo "Running in check mode"
    command -v iperf >/dev/null 2>&1 || { echo >&2 "iperf is not installed. Exiting."; exit 1; }
    echo "Check mode PASSED"
    exit 0
}

if [[ $1 == "check" ]];
  then
    check
fi

# The first argument after the testlet name will ALWAYS be the target. So, $1 is always the target, and all arguments from $2 and up should be passed into the app command
app_args="$@"
app_args=${app_args#$0 } # Remove Testlet name
app_args=${app_args#$1 } # Remove Target
# at this point, app_args should be all that's left

# This testlet uses target substitution, so let's make sure that if it exists in the args, we replace it with the actual target IP.
app_args=$(echo $app_args | sed 's/{{ target }}/'"$1"'/')

# Note that we're forcing megabites here using "-f m" so we can have predictable parsing. We put them at the end so that any conflicting user provided args won't conflict with this.
app_run_command="iperf $app_args -f m "

output=$($app_run_command)

tcp_window_size_mbyte=$(echo $output | tr '\n' ' ' | sed -n 's/.*TCP window size: \(.*\).*/\1/p' | sed 's/ MByte.*//')  # That last sed statement shouldn't be necessary but I couldn't seem to get the first one to work just perfectly
transfer_mbytes=$(echo $output | tr '\n' ' ' | sed -n 's/.*sec *\(.*\) MBytes.*/\1/p')
bandwidth_mbits_sec=$(echo $output | tr '\n' ' ' | sed -n 's/.*MBytes *\(.*\) Mbits.*/\1/p')

teslet_data='{"tcp_window_size_mbyte":"'$tcp_window_size_mbyte'", "transfer_mbytes":"'$transfer_mbytes'", "bandwidth_mbits_sec":"'$bandwidth_mbits_sec'"}'
echo $teslet_data
